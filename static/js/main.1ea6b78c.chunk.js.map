{"version":3,"sources":["components/NavMenus.tsx","pages/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink.tsx","components/PeopleTable.tsx","pages/PeoplePage.tsx","pages/ErrorPage.tsx","App.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","getLinkStyle","color","NavMenu","className","role","to","style","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","slug","sex","name","PeopleTable","people","personSlug","useParams","map","born","died","mother","motherName","father","fatherName","PeoplePage","useState","setPeople","loading","setLoading","error","setError","getParent","peopleFromServer","find","peopleServer","catch","finally","length","ErrorPage","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1ea6b78c.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean; }) => (\n  classNames('navbar-item', { 'has-background-grey-lighter': isActive })\n);\n\nconst getLinkStyle = ({ isActive }: { isActive: boolean }) => (\n  { color: isActive ? 'red' : '' }\n);\n\nexport const NavMenu = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={getLinkClass}\n            style={getLinkStyle}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"people\"\n            className={getLinkClass}\n            style={getLinkStyle}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Home Page</h1>\n      </div>\n    </div>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport React from 'react';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`../${person.slug}`}\n      className={classNames({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[]\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { personSlug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={classNames({\n              'has-background-warning': person.slug === personSlug,\n            })}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {person.mother\n                ? (<PersonLink person={person.mother} />)\n                : (person.motherName || '-')}\n            </td>\n            <td>\n              {person.father\n                ? (<PersonLink person={person.father} />)\n                : (person.fatherName || '-')}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { PeopleTable } from '../components/PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  function getParent(\n    name: string, peopleFromServer: Person[],\n  ): Person | undefined {\n    return peopleFromServer.find(person => person.name === name);\n  }\n\n  useState(() => {\n    setLoading(true);\n    getPeople().then(peopleServer => {\n      setPeople(peopleServer.map(person => ({\n        ...person,\n        mother: getParent(person.motherName || '', peopleServer),\n        father: getParent(person.fatherName || '', peopleServer),\n      })));\n    })\n      .catch(() => setError(true))\n      .finally(() => setLoading(false));\n  });\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading ? (<Loader />) : (\n            <>\n              {people.length === 0 && !error && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              <PeopleTable people={people} />\n\n              {error && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const ErrorPage = () => {\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Page not found</h1>\n      </div>\n    </div>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { NavMenu } from './components/NavMenus';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { ErrorPage } from './pages/ErrorPage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n\n    <NavMenu />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"people\">\n            <Route path=\":personSlug?\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<ErrorPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}